{"version":3,"sources":["../../src/app/neutrinos-module/neutrinos-file/services/n-fileIO.service.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-camera.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-download.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-scanner.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-video.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-barcode.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-tts.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-fingerprint.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-ocr.directive.ts","../../src/app/neutrinos-module/neutrinos-file/directives/n-shake.directive.ts","../../src/app/neutrinos-module/neutrinos-file/fileUpload/n-fileUpload.component.ts","../../src/app/neutrinos-module/neutrinos-components/nAlertComponent/n-alert.component.ts","../../src/app/neutrinos-module/neutrinos-components/nAlertComponent/n-alert.service.ts","../../src/app/neutrinos-module/neutrinos-components/nToggleoptionsComponent/n-toggleoptions.component.ts","../../src/app/neutrinos-module/neutrinos-components/nSignatureComponent/n-signature.component.ts","../../src/app/neutrinos-module/neutrinos.module.ts"],"names":["NFileIOService","http","_this","this","checkFileExist","path","fileName","i","callback","window","resolveLocalFileSystemURL","length","lastIndexOf","isExist","parseInt","slice","isNaN","systemService","NSystemService","getInstance","appProperties","getVal","prototype","getFileInfo","options","dataModelURL","getDataModelUrl","metadata","appName","entityName","key","fileId","get","getFormData","fileUri","Promise","resolve","reject","fileEntry","file","reader","FileReader","onerror","evt","onloadend","formData","FormData","blob","Blob","Uint8Array","result","type","append","name","readAsArrayBuffer","error","getPicture","cameraOptions","document","addEventListener","navigator","camera","imageUri","then","res","catch","err","scanPicture","scanOptions","hasOwnProperty","scan","scanDoc","sourceType","doUpload","getBarcode","barcodeOptions","cordova","plugins","barcodeScanner","cancelled","getVideo","videoOptions","device","capture","captureVideo","mediaFiles","fullPath","getTts","ttsOptions","TTS","speak","reason","getShake","shakeOptions","start","shake","startWatch","sensitivity","stopWatch","getOcr","ocrOptions","imageData","textocr","recText","uriOrBase","returnType","recognizedText","message","getFingerprint","fingerprintOptions","Fingerprint","isAvailable","show","upload","body","files","JSON","stringify","url","getFileIOUrl","temp_headers","headers","setHeaders","Content-Type","post","subscribe","download","fileInfo","contentType","filename","fileIOURL","Accept","responseType","response","saveFile","resp","data","checkDevice","storageLocation","isAndroid","externalRootDirectory","documentsDirectory","createDirectory","saveToBrowser","StyleMedia","msSaveBlob","downloadURL","URL","createObjectURL","anchor","createElement","appendChild","style","display","href","click","revokeObjectURL","removeChild","remove","rootDirectory","fileSystem","getDirectory","create","dirEntry","nativeURL","newFileName","getFile","targetFile","createWriter","fileWriter","onwriteend","toURL","write","headerJSON","HttpHeaders","set","Injectable","HttpClient","NCameraDirective","fsv","onsuccess","EventEmitter","methodToHandleMouseClickAction","sucess","emit","uri","Directive","args","selector","Input","Output","HostListener","NDownloadDirective","downloadFile","downloadOptions","NScanDirective","NVideoDirective","NBarcodeDirective","NTtsDirective","NFingerprintDirective","NOcrDirective","NShakeDirective","NFileUploadComponent","fileIOService","_renderer","handleUpload","isDone","uploadOptions","Error","handleSelect","fileInput","target","cancel","setProperty","disableFileUploadButton","disableButton","Component","template","Renderer2","ViewChild","static","NAlertComponent","dialogRef","messageContent","titleContent","title","MatDialogRef","NAlertService","dialog","alert","open","MatDialog","NToggleoptionsComponent","toggleOptions","align","indexChange","valueChange","ngOnInit","checkNumber","checkedIndex","Number","disabledIndex","ngOnChanges","changes","optionClicked","index","value","number","NSignatureComponent","imageDataValue","signaturePad","mode","canvasMode","imageDataChange","imageDataUrl","Object","defineProperty","val","parse","_a","canvas","saveFromSavedData","imageSrcDataUrl","toDataURL","savedDataPoints","previousSavedData","ngAfterViewInit","createCanvas","setTimeout","hideCanvas","fitToContainer","signaturecanvas","nativeElement","clientHeight","clientWidth","clearCanvas","drawFromSavedData","updatePreviousSaveData","toData","signing.default","assignOptions","saveCavas","isEmpty","clear","undoCanvas","pop","fromData","showCanvas","classAbs","assign","element","height","width","offsetWidth","offsetHeight","checkIfValidValueAndRGB","backgroundColor","checkIfValidValueAndNumber","dotSize","minWidth","maxWidth","throttle","minDistance","penColor","velocityFilterWeight","checkIfValidValueAndFunction","onBegin","onEnd","num","checkIfValid","invalidToast","color","checkRGB","fn","checkIfValidFunction","undefined","checkIsNan","matchColors1","RegExp","matchColors2","matchColors3","test","optionName","optionType","isDataURL","s","match","EXPORTS","NgModule","imports","HttpClientModule","FormsModule","CommonModule","MatIconModule","MatDialogModule","MatButtonModule","BrowserAnimationsModule","MatButtonToggleModule","NeutrinosSeedServicesModule","FlexLayoutModule","declarations","exports","providers"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NSystemService} from 'neutrinos-seed-services';\n\n\ndeclare const window: any;\ndeclare const cordova: any;\ndeclare const navigator: any;\ndeclare const scan: any;\ndeclare const textocr: any;\ndeclare const TTS: any;\ndeclare const shake: any;\ndeclare const Fingerprint: any;\n\n@Injectable()\nexport class NFileIOService {\n  systemService;\n  appProperties;\n\n  constructor(private http: HttpClient) {\n    this.systemService = NSystemService.getInstance();\n    this.appProperties = this.systemService.getVal('properties');\n  }\n\n  private getFileInfo(options): any {\n    let dataModelURL = this.systemService.getDataModelUrl();\n    if (options.metadata) {\n      dataModelURL += `${this.appProperties.appName}_${options.entityName}.files?filter={\"metadata.key\": \"${options.metadata.key}\"}`;\n    } else {\n      dataModelURL += `${this.appProperties.appName}_${options.entityName}.files/${options.fileId}`;\n    }\n    return this.http.get(dataModelURL);\n  }\n\n  private getFormData(fileUri: string): Promise<FormData> {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(fileUri, (fileEntry) => {\n        fileEntry.file((file) => {\n          const reader = new FileReader();\n          reader.onerror = evt => {\n            return reject(evt);\n          };\n          reader.onloadend = evt => {\n            const formData = new FormData();\n            const blob = new Blob([new Uint8Array(<any>reader.result)], { type: file.type });\n            formData.append('file', blob, file.name);\n            return resolve(formData);\n          };\n          reader.readAsArrayBuffer(file);\n        });\n      }, (error) => {\n        return reject(error);\n      });\n    });\n  }\n\n  public getPicture(cameraOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        navigator.camera.getPicture((imageUri) => {\n          this.getFormData(imageUri).then(res => {\n            return resolve(res);\n          }).catch(err => reject(err));\n        }, (error) => {\n          return reject(error);\n        }, cameraOptions);\n      }, false);\n    });\n  }\n\n  public scanPicture(scanOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(scanOptions.hasOwnProperty('sourceType') && scanOptions.hasOwnProperty('doUpload')) {\n          scan.scanDoc(scanOptions.sourceType, (imageUri) => {\n            if (scanOptions.doUpload) {\n                this.getFormData(imageUri).then(res => {\n                  return resolve(res);\n                }).catch(err => reject(err));\n            }\n            else {\n                resolve(imageUri);\n            }\n          }, (error) => {\n            return reject(error);\n          });\n        } else {\n          reject('sourceType not found');\n        }\n      }, false);\n    });\n  }\n\n//Barcode\n  public getBarcode(barcodeOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        cordova.plugins.barcodeScanner.scan((result)=> {\n          if(result.cancelled) {\n            return reject(result);\n          } else {\n            return resolve(result);\n          }\n        }, (error)=> {\n          return reject(error);\n        }, barcodeOptions);\n      }, false);\n    });\n  }\n\n//Video\n  public getVideo(videoOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        navigator.device.capture.captureVideo((mediaFiles) => {\n          var imageUri = mediaFiles[0].fullPath;        \n          this.getFormData(imageUri).then(res => {\n            return resolve(res);\n          }).catch(err => reject(err));\n        }, (error) => {\n          return reject(error);\n        }, {});\n      }, false);\n    });\n  }\n\n//tts\n  public getTts(ttsOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(ttsOptions.hasOwnProperty('text')) {\n          TTS.speak(ttsOptions).then(() => {\n            return resolve('success');\n          }, (reason) => {\n            return reject(reason);\n          });\n        } else {\n          reject('text not found');\n        }\n      }, false);\n    });\n  }\n\n//shake\n  public getShake(shakeOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(shakeOptions.hasOwnProperty('start') && shakeOptions.hasOwnProperty('sensitivity')) {\n          if(shakeOptions.start) {\n            shake.startWatch(() => {\n              return resolve('success');\n            }, shakeOptions.sensitivity, () => {\n              return reject('error');\n            });\n          } else {\n            shake.stopWatch();\n          }\n        } else {\n          reject('start or sensitivity not found');\n        }\n      }, false);\n    });\n  }\n\n//ocr\n  public getOcr(ocrOptions) {\n      return new Promise((resolve, reject) => {\n        document.addEventListener('deviceready', () => {\n          if(ocrOptions.hasOwnProperty('uriOrBase') && ocrOptions.hasOwnProperty('returnType')) {\n            navigator.camera.getPicture((imageData) => {\n                textocr.recText(ocrOptions.uriOrBase, ocrOptions.returnType, imageData, (recognizedText) => {\n                return resolve(recognizedText);\n              }, (message) => {\n                return reject(message);\n              });\n            }, (message) => {\n              return reject(message);\n            }, ocrOptions); \n          } else {\n            reject('uriOrBase or returnType not found');\n          }\n \n        }, false);\n    });\n  }\n\n\n//fingerprint\n  public getFingerprint(fingerprintOptions) {\n    return new Promise((resolve, reject) => {\n      document.addEventListener('deviceready', () => {\n        if(fingerprintOptions.hasOwnProperty('clientId') && fingerprintOptions.hasOwnProperty('clientSecret')) {\n          Fingerprint.isAvailable((result) => {\n            Fingerprint.show(fingerprintOptions, () => {\n              return resolve('success');\n            }, (err) => {\n              return reject(err);\n            });\n          }, (message) => {\n            return reject(message);\n          });\n        } else {\n          reject('clientId or clientSecret not found');\n        }\n      }, false);\n    });\n  }\n\n  public upload(options): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let body: FormData = new FormData();\n      if (options.formData) {\n        body = options.formData;\n      } else if (options.files) {\n        body.append('file', options.files);\n      } else {\n        reject('No file selected!');\n      }\n      if (options.metadata) {\n        body.append('metadata', JSON.stringify(options.metadata));\n      }\n\n      const headers = { 'Content-Type': 'no-content' };\n      const url = this.systemService.getFileIOUrl() + `${options.entityName}`;\n      let temp_headers = { headers: this.setHeaders(headers) }\n      this.http.post(url, body, temp_headers)\n        .subscribe(res => resolve(res)\n        , err => reject(err));\n    });\n  }\n\n  public download(options: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (options.entityName && (options.metadata || options.fileId)) {\n        this.getFileInfo(options).subscribe((res) => {\n          if (options.metadata) {\n            res = res[res.length - 1];\n          } else {\n            res = res.result;\n          }\n          const fileInfo = {\n            contentType: '',\n            filename: ''\n          };\n          if (res && res['contentType'] && res['filename']) {\n            fileInfo['contentType'] = res['contentType'];\n            fileInfo['filename'] = res['filename'];\n            let fileIOURL = this.systemService.getFileIOUrl();\n            if (options.metadata) {\n              fileIOURL += `${options.entityName}?metadataFilter={\"metadata.key\": \"${options.metadata.key}\"}`;\n            } else {\n              fileIOURL += `${options.entityName}/${options.fileId}`;\n            }\n            const headers = {\n              'Accept': fileInfo.contentType\n            };\n            this.http.get(fileIOURL, { headers: this.setHeaders(headers), responseType: 'blob' }).subscribe((response: any) => {\n              const blob = new Blob([response.body], { type: fileInfo.contentType });\n              this.saveFile(blob, fileInfo.filename).then((resp) => {\n              }).catch(err => reject(err));\n            }, err => reject(err));\n          } else {\n            reject('fileInfo not exit');\n          }\n        }, err => reject(err));\n      } else {\n        return reject('download options not found');\n      }\n    });\n  }\n\n  public saveFile(data: Blob, filename: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (this.systemService.checkDevice() == 'mobile') {\n        const storageLocation = this.systemService.isAndroid() ? cordova.file.externalRootDirectory : cordova.file.documentsDirectory;\n        this.createDirectory(storageLocation, this.appProperties.appName, filename, data)\n          .then(res => resolve(res))\n          .catch(err => reject(err));\n      } else {\n        this.saveToBrowser(data, filename).then(res => resolve(res));\n      }\n    });\n  }\n\n  private saveToBrowser(data: Blob, fileName: string) {\n    return new Promise((resolve) => {\n      // Edge 20+\n      const isEdge = !(/*@cc_on!@*/false || !!document['documentMode']) && !!window.StyleMedia;\n      if (isEdge) {\n        window.navigator.msSaveBlob(data, fileName);\n      } else {\n        const downloadURL = window.URL.createObjectURL(data);\n        const anchor = document.createElement('a');\n        document.body.appendChild(anchor);\n        anchor.style.display = 'none';\n        anchor.download = fileName;\n        anchor.href = downloadURL;\n        anchor.click();\n        window.URL.revokeObjectURL(downloadURL);\n        document.body.removeChild(anchor);\n        anchor.remove();\n      }\n      return resolve('download complete');\n    });\n  }\n\n  private createDirectory(rootDirectory: any, appName: string, fileName: string, data: Blob) {\n    return new Promise((resolve, reject) => {\n      window.resolveLocalFileSystemURL(rootDirectory, (fileSystem) => {\n        fileSystem.getDirectory(appName, { create: true }, (dirEntry) => {\n          this.checkFileExist(dirEntry.nativeURL, fileName, 0, (newFileName) => {\n            dirEntry.getFile(newFileName, { create: true }, (targetFile) => {\n              targetFile.createWriter((fileWriter) => {\n                fileWriter.onwriteend = () => {\n                  return resolve(targetFile.toURL());\n                };\n\n                fileWriter.onerror = (err) => {\n                  return reject(err);\n                };\n                fileWriter.write(data);\n              });\n            });\n          });\n        }, err => reject(err));\n      }, err => reject(err));\n    });\n  }\n\n  private checkFileExist = (path: string, fileName: string, i: number, callback) => {\n    return window.resolveLocalFileSystemURL(path + fileName, () => {\n      let length = 4;\n      if (fileName.lastIndexOf('(') > -1) {\n        const isExist = parseInt(fileName.slice((fileName.lastIndexOf('(') + 1), fileName.lastIndexOf(')')), 10);\n        if (!isNaN(isExist)) {\n          i = isExist + 1;\n          if (i > 10 && i < 100) {\n            length += 1;\n          } else if (i > 100) {\n            length += 2;\n          }\n          fileName = fileName.slice(0, (fileName.lastIndexOf('.') - length)) + ' (' + i + ')' + fileName.slice(fileName.lastIndexOf('.'));\n        } else {\n          i += 1;\n          fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + fileName.slice(fileName.lastIndexOf('.'));\n          fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + ' (' + i + ')' + fileName.slice(fileName.lastIndexOf('.'));\n        }\n      } else {\n        i += 1;\n        fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + fileName.slice(fileName.lastIndexOf('.'));\n        fileName = fileName.slice(0, (fileName.lastIndexOf('.'))) + ' (' + i + ')' + fileName.slice(fileName.lastIndexOf('.'));\n      }\n      return this.checkFileExist(path, fileName, i, callback);\n    }, () => {\n      return callback(fileName);\n    });\n  }\n\n  private setHeaders(headerJSON: Object): HttpHeaders {\n    let headers = new HttpHeaders();\n    for (const key in headerJSON) {\n      if (key) {\n        headers = headers.set(key, headerJSON[key]);\n      }\n    }\n    return headers;\n  }\n\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\nexport interface CameraOptions {\n  quality?: 50;\n  destinationType?: 1 | 2;\n  EncodingType?: 0 | 1;\n  MediaType?: 0 | 1 | 2;\n  PictureSourceType?: 0 | 1 | 2;\n}\n\n@Directive({\n  selector: '[n-camera]'\n})\nexport class NCameraDirective {\n  @Input() cameraOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getPicture()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getPicture(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getPicture(this.cameraOptions).then(res => {\n        const options = {\n          'formData': res,\n          'entityName': this.cameraOptions.entityName,\n          'metadata': this.cameraOptions.metadata\n        };\n        this.fsv.upload(options)\n          .then(uri => resolve(uri))\n          .catch(err => reject(err));\n      }).catch(err => reject(err));\n    });\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\n@Directive({ selector: '[n-download]' })\nexport class NDownloadDirective {\n  @Input() downloadOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.downloadFile()\n      .then(res => this.onsuccess.emit(res))\n      .catch(err => this.onerror.emit(err));\n  }\n\n  downloadFile() {\n    return this.fsv.download(this.downloadOptions);\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n@Directive({\n  selector: '[n-scan]'\n})\nexport class NScanDirective {\n  @Input() scanOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getPicture()\n      .then((sucess) => this.onsuccess.emit(sucess))\n      .catch((error) => this.onerror.emit(error));\n  }\n\n  getPicture(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.scanPicture(this.scanOptions).then(res => {\n\n        if (this.scanOptions.doUpload) {\n          const options = {\n            'formData': res,\n            'entityName': this.scanOptions.entityName,\n            'metadata': this.scanOptions.metadata\n          };\n          this.fsv.upload(options).then(uri => {\n            resolve(uri);\n          }).catch(err => reject(err));\n        }\n        else\n        {\n          resolve(res);\n        }\n      }).catch((err) => {\n        return reject(err);\n      });\n    });\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-video]'\n})\nexport class NVideoDirective {\n  @Input() videoOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getVideo()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getVideo(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getVideo(this.videoOptions).then(res => {\n        const options = {\n          'formData': res,\n          'entityName': this.videoOptions.entityName,\n          'metadata': this.videoOptions.metadata\n        };\n        this.fsv.upload(options)\n          .then(uri => resolve(uri))\n          .catch(err => reject(err));\n      }).catch(err => reject(err));\n    });\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-barcode]'\n})\nexport class NBarcodeDirective {\n  @Input() barcodeOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getBarcode()\n    .then(sucess => this.onsuccess.emit(sucess))\n    .catch(error => this.onerror.emit(error));\n  }\n\n  getBarcode(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getBarcode(this.barcodeOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-tts]'\n})\nexport class NTtsDirective {\n  @Input() ttsOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getTts()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getTts(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getTts(this.ttsOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-fingerprint]'\n})\nexport class NFingerprintDirective {\n  @Input() fingerprintOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getFingerprint()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getFingerprint(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getFingerprint(this.fingerprintOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-ocr]'\n})\nexport class NOcrDirective {\n  @Input() ocrOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getOcr()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getOcr(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getOcr(this.ocrOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\nimport { NDirectiveOptions } from './directive.class';\n\n\ndeclare const navigator: any;\n\n@Directive({\n  selector: '[n-shake]'\n})\nexport class NShakeDirective {\n  @Input() shakeOptions: NDirectiveOptions;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter();\n  @Output() onerror: EventEmitter<any> = new EventEmitter();\n\n  constructor(private fsv: NFileIOService) { }\n\n  @HostListener('click') methodToHandleMouseClickAction() {\n    this.getShake()\n      .then(sucess => this.onsuccess.emit(sucess))\n      .catch(error => this.onerror.emit(error));\n  }\n\n  getShake(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.fsv.getShake(this.shakeOptions).then(res => {\n        return resolve(res);\n      }).catch(err => reject(err));\n    });\n  }\n}\n","import { Component, Input, Output, EventEmitter, ViewChild, Renderer2 } from '@angular/core';\nimport { NFileIOService } from '../services/n-fileIO.service';\n\n\n@Component({\n  selector: 'n-file-upload',\n  styleUrls: ['./n-fileUpload.component.scss'],\n  templateUrl: './n-fileUpload.template.html',\n})\nexport class NFileUploadComponent {\n  @ViewChild('fileInput', {static: false}) fileInput;\n  file: File;\n  fileName;\n  isDone: boolean;\n\n  @Input() uploadOptions;\n  @Input('disabled') disableButton;\n  @Output() onsuccess: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onerror: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(\n    private fileIOService: NFileIOService,\n    private _renderer: Renderer2) { }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  handleUpload(): void {\n    this.isDone = false;\n    if (this.file && this.uploadOptions && this.uploadOptions.entityName && this.uploadOptions.metadata) {\n      this.fileIOService.upload({ files: this.file, entityName: this.uploadOptions.entityName, metadata: this.uploadOptions.metadata })\n        .then((res) => {\n          this.isDone = true;\n          this.onsuccess.emit(res);\n        })\n        .catch(err => this.onerror.emit(err));\n    } else {\n      this.onerror.emit(new Error('Upload options missing'));\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(fileInput: any): void {\n    if (fileInput.target.files && fileInput.target.files[0]) {\n      this.file = fileInput.target.files[0];\n      this.fileName = this.file.name;\n    }\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.file = null;\n    this.fileName = null;\n    this.isDone = false;\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this._renderer.setProperty(this.fileInput, 'value', '');\n    }\n  }\n\n  disableFileUploadButton() {\n    if (typeof this.disableButton === 'boolean') {\n      return this.disableButton;\n    }\n    return this.disableButton === 'disabled' || this.disableButton === 'true' ? true : false;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'n-alert-dialog',\n  templateUrl: './n-alert.template.html',\n  styleUrls: ['./n-alert.style.scss']\n})\n\nexport class NAlertComponent {\n  static title = '';\n  static message = '';\n  messageContent;\n  titleContent;\n  constructor(public dialogRef?: MatDialogRef<NAlertComponent>) {\n    this.messageContent = NAlertComponent.message;\n    this.titleContent = NAlertComponent.title;\n  }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { NAlertComponent } from './n-alert.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Injectable()\nexport class NAlertService {\n    constructor(private dialog: MatDialog) { }\n\n    alert(message, title, data?) {\n        NAlertComponent.message = message;\n        NAlertComponent.title = title;\n        this.dialog.open(NAlertComponent, data);\n    }\n\n}","// import { MatSnackBar } from '@angular/material';\nimport { Component, OnInit, OnChanges, SimpleChanges, Input, EventEmitter, Output } from '@angular/core'\n\n@Component({\n    selector: 'n-toggleoptions',\n    templateUrl: './n-toggleoptions.template.html'\n})\n\nexport class NToggleoptionsComponent implements OnInit, OnChanges {\n    // options = {icon: 'home', value: 'home', disabled: false, 'checked': false}\n    @Input('toggleOptions') toggleOptions = [];\n    @Input('align') align = 'horizontal';\n    @Input('disabledIndex') disabledIndex;\n    @Input('checkedIndex') checkedIndex;\n    @Input('value') value : string;\n    @Output() indexChange = new EventEmitter();\n    @Output() valueChange = new EventEmitter();\n    // constructor(private snackbar: MatSnackBar) {\n    // }\n\n    ngOnInit() {\n        if (this.checkNumber(this.checkedIndex)) {\n            this.checkedIndex = Number(this.checkedIndex);\n        }\n\n        if (this.checkNumber(this.disabledIndex)) {\n            this.disabledIndex = Number(this.disabledIndex);\n        }\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['checkedIndex'] && this.checkNumber(this.checkedIndex)) {\n            this.checkedIndex = Number(this.checkedIndex);\n        } else if (changes['disabledIndex'] && this.checkNumber(this.disabledIndex)) {\n            this.disabledIndex = Number(this.disabledIndex);\n        }\n    }\n\n    optionClicked(index) {\n        if (this.toggleOptions && this.toggleOptions.length > 0) {\n            this.indexChange.emit(index);\n            if (this.toggleOptions[index] && this.toggleOptions[index].value) {\n                this.valueChange.emit(this.toggleOptions[index].value);\n            } else {\n                // this.snackbar.open('Invalid toggle button value', 'OK');\n            }\n        } else {\n            // this.snackbar.open('Invalid toggle options', 'OK');\n        }\n    }\n\n    private checkNumber(number) {\n        if (number !== undefined && number !== null) {\n            return Number.isNaN(Number(number));\n        }\n        return false;\n    }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport * as signing from 'signature_pad';\n\n@Component({\n\tselector: 'n-signature',\n\ttemplateUrl: './n-signature.template.html',\n\tstyles: [\n\t\t`\n\t\t\t:host {\n\t\t\t\theight: 100% !important;\n\t\t\t}\n\t\t\t.signature-canvas-fullscreen {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\tright: 0;\n\t\t\t\tleft: 0;\n\t\t\t}\n\t\t\t.signature-component-border {\n\t\t\t\tborder: 2px solid black;\n\t\t\t}\n\t\t`,\n\t],\n})\nexport class NSignatureComponent implements OnInit, AfterViewInit {\n\timageDataValue = '';\n\tprivate signaturePad: any = '';\n\n\t@ViewChild('signaturecanvas', { static: false }) signaturecanvas;\n\t@ViewChild('canvasparent', { static: false }) canvasparent;\n\n\t@Input('backgroundColor') backgroundColor;\n\t@Input('dotSize') dotSize; // (float or function) Radius of a single dot.\n\t@Input('minWidth') minWidth; // (float) Minimum width of a line. Defaults to 0.5.\n\t@Input('maxWidth') maxWidth; // (float) Maximum width of a line. Defaults to 2.5.\n\t@Input('throttle') throttle; // (integer) Draw the next point at most once per every x milliseconds. Set it to 0 to turn off throttling. Defaults to 16.\n\t@Input('minDistance') minDistance; // (integer) Add the next point only if the previous one is farther than x pixels. Defaults to 5.\n\t@Input('penColor') penColor; // (string) Color used to clear the background. Can be any color format accepted by context.fillStyle. Defaults to \"rgba(0,0,0,0)\" (transparent black). Use a non-transparent color e.g. \"rgb(255,255,255)\" (opaque white) if you'd like to save signatures as JPEG images.\n\t@Input('velocityFilterWeight') velocityFilterWeight; // (float) Weight used to modify new velocity based on the previous velocity. Defaults to 0.7.\n\t@Input('onBegin') onBegin; // (function) Callback when stroke begin.\n\t@Input('onEnd') onEnd; // (function) Callback when stroke end.\n\t@Input('mode') mode = 'responsive'; // 'click-fullscreen' or 'responsive'\n\tcanvasMode = 'fullscreen'; // 'responsive' or 'fullscreen'\n\tprivate savedDataPoints;\n\tprivate previousSavedData;\n\tclassAbs;\n\timageSrcDataUrl;\n\n\t@Output() imageDataChange = new EventEmitter();\n\t@Output() imageDataUrl = new EventEmitter();\n\t@Input()\n\tget imageData() {\n\t\treturn this.imageDataValue;\n\t}\n\n\tset imageData(val) {\n\t\tthis.imageDataValue = JSON.parse(JSON.stringify(val));\n\t\tif (this.signaturePad?.canvas) {\n\t\t\tthis.saveFromSavedData(this.imageDataValue);\n\t\t\tif (this.mode !== 'responsive') {\n\t\t\t\tthis.imageSrcDataUrl = this.signaturePad.toDataURL();\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.savedDataPoints = this.previousSavedData = JSON.parse(JSON.stringify(this.imageData));\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.createCanvas();\n\t\tthis.saveFromSavedData(this.savedDataPoints);\n\t\tsetTimeout(() => {\n\t\t\tif (this.mode !== 'responsive') {\n\t\t\t\tthis.hideCanvas();\n\t\t\t\tthis.fitToContainer(this.signaturecanvas.nativeElement, document.body.clientHeight, document.body.clientWidth);\n\t\t\t\tthis.clearCanvas();\n\t\t\t\tthis.drawFromSavedData(this.savedDataPoints);\n\t\t\t\tthis.imageSrcDataUrl = this.signaturePad.toDataURL();\n\t\t\t}\n\t\t});\n\t}\n\n\tsaveFromSavedData(val) {\n\t\tthis.updatePreviousSaveData(val);\n\t\tthis.drawFromSavedData(val);\n\t\tthis.savedDataPoints = this.signaturePad.toData();\n\t}\n\n\tcreateCanvas() {\n\t\tthis.fitToContainer(this.signaturecanvas.nativeElement);\n\t\tthis.signaturePad = new signing.default(this.signaturecanvas.nativeElement, this.assignOptions());\n\t}\n\n\tsaveCavas() {\n\t\tif (this.signaturePad) {\n\t\t\tif (this.signaturePad.isEmpty()) {\n\t\t\t\tthis.clearCanvas();\n\t\t\t}\n\t\t\tthis.imageDataChange.emit(JSON.parse(JSON.stringify(this.signaturePad.toData())));\n\t\t\tthis.imageDataUrl.emit(this.signaturePad.toDataURL());\n\t\t\tif (this.mode !== 'responsive') {\n\t\t\t\tthis.hideCanvas();\n\t\t\t\tthis.imageSrcDataUrl = this.signaturePad.toDataURL();\n\t\t\t}\n\t\t\tthis.saveFromSavedData(this.signaturePad.toData());\n\t\t}\n\t}\n\n\tclearCanvas() {\n\t\tthis.signaturePad.clear();\n\t}\n\n\tundoCanvas() {\n\t\tconst data = this.signaturePad.toData();\n\n\t\tif (data) {\n\t\t\tdata.pop(); // remove the last dot or line\n\t\t\tthis.signaturePad.fromData(data);\n\t\t}\n\t}\n\n\tshowCanvas() {\n\t\tthis.classAbs = true;\n\t\tthis.canvasMode = 'fullscreen';\n\t\tif (!this.signaturePad) {\n\t\t\tthis.createCanvas();\n\t\t}\n\t\tthis.fitToContainer(this.signaturecanvas.nativeElement, document.body.clientHeight, document.body.clientWidth);\n\t\tthis.clearCanvas();\n\t\tthis.updatePreviousSaveData(this.savedDataPoints);\n\t\tthis.drawFromSavedData(this.savedDataPoints);\n\t}\n\n\thideCanvas() {\n\t\tthis.canvasMode = 'responsive';\n\t}\n\n\t// cancel currently drawn\n\tcancel() {\n\t\tthis.savedDataPoints = Object.assign([], this.previousSavedData);\n\t\tthis.clearCanvas();\n\t\tthis.drawFromSavedData(this.savedDataPoints);\n\t}\n\n\tupdatePreviousSaveData(val) {\n\t\tthis.previousSavedData = Object.assign([], val);\n\t}\n\n\tdrawFromSavedData(val) {\n\t\tif (val) {\n\t\t\tthis.signaturePad.clear();\n\t\t\tthis.signaturePad.fromData(val);\n\t\t}\n\t}\n\n\tprivate fitToContainer(element, height?, width?) {\n\t\telement.style.width = '100%';\n\t\telement.style.height = 'calc(100% - 56px)';\n\t\tif (height && width) {\n\t\t\telement.width = width;\n\t\t\telement.height = height - 56;\n\t\t} else {\n\t\t\telement.width = element.offsetWidth;\n\t\t\telement.height = element.offsetHeight;\n\t\t}\n\t}\n\n\tprivate assignOptions() {\n\t\tlet options = {};\n\t\toptions['backgroundColor'] = this.checkIfValidValueAndRGB(this.backgroundColor, 'backgroundColor');\n\t\toptions['dotSize'] = this.checkIfValidValueAndNumber(this.dotSize, 'dotSize');\n\t\toptions['minWidth'] = this.checkIfValidValueAndNumber(this.minWidth, 'minWidth');\n\t\toptions['maxWidth'] = this.checkIfValidValueAndNumber(this.maxWidth, 'maxWidth');\n\t\toptions['throttle'] = this.checkIfValidValueAndNumber(this.throttle, 'throttle');\n\t\toptions['minDistance'] = this.checkIfValidValueAndNumber(this.minDistance, 'minDistance');\n\t\toptions['penColor'] = this.checkIfValidValueAndRGB(this.penColor, 'penColor');\n\t\toptions['velocityFilterWeight'] = this.checkIfValidValueAndNumber(this.velocityFilterWeight, 'velocityFilterWeight');\n\t\toptions = JSON.parse(JSON.stringify(options)); // removing all undefined fields\n\t\toptions['onBegin'] = this.checkIfValidValueAndFunction(this.onBegin, 'onBegin');\n\t\toptions['onEnd'] = this.checkIfValidValueAndFunction(this.onEnd, 'onEnd');\n\t\treturn options;\n\t}\n\n\tprivate checkIfValidValueAndNumber(num, name) {\n\t\tif (this.checkIfValid(num) && this.checkNumber(num)) {\n\t\t\treturn num;\n\t\t}\n\t\tthis.invalidToast(name, 'num');\n\t\treturn undefined;\n\t}\n\n\tprivate checkIfValidValueAndRGB(color, name) {\n\t\tif (this.checkIfValid(color) && this.checkRGB(color)) {\n\t\t\treturn color;\n\t\t}\n\t\tthis.invalidToast(name, 'rgb');\n\t\treturn undefined;\n\t}\n\n\tprivate checkIfValidValueAndFunction(fn, name) {\n\t\tif (this.checkIfValid(fn) && this.checkIfValidFunction(fn)) {\n\t\t\treturn fn;\n\t\t}\n\t\tthis.invalidToast(name, 'function format');\n\t\treturn undefined;\n\t}\n\n\tprivate checkIfValid(value) {\n\t\treturn value !== undefined && value !== null ? value : undefined;\n\t}\n\n\tprivate checkNumber(num) {\n\t\treturn !this.checkIsNan(Number(num)) ? Number(num) : undefined;\n\t}\n\n\tprivate checkIfValidFunction(fn) {\n\t\treturn typeof fn === 'function' ? fn : undefined;\n\t}\n\n\tprivate checkRGB(color) {\n\t\tconst matchColors1 = new RegExp(/rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/);\n\t\tconst matchColors2 = new RegExp(/rgb\\((\\d{1,3}),[ \\t]+(\\d{1,3}),(\\d{1,3})\\)/);\n\t\tconst matchColors3 = new RegExp(/rgb\\((\\d{1,3}),(\\d{1,3}),[ \\t]+(\\d{1,3})\\)/);\n\t\treturn matchColors1.test(color) || matchColors2.test(color) || matchColors3.test(color);\n\t}\n\n\tprivate checkIsNan(value) {\n\t\treturn Number.isNaN(value);\n\t}\n\n\tprivate invalidToast(optionName, optionType) {\n\t\tswitch (optionType) {\n\t\t\tcase 'num':\n\t\t\t\t// this.snackbar.open(`Invalid ${optionName} (number or float) given, taking default value instead.`, 'OK');\n\t\t\t\tbreak;\n\t\t\tcase 'rgb':\n\t\t\t\t// this.snackbar.open(`Invalid ${optionName} format Eg: rgb(255, 255, 255)  given, taking default value instead.`, 'OK');\n\t\t\t\tbreak;\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate isDataURL(s) {\n\t\tif (s && typeof s === 'string') {\n\t\t\tconst regex =\n\t\t\t\t/^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/i;\n\t\t\treturn !!s.match(regex);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NeutrinosSeedServicesModule } from 'neutrinos-seed-services';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { NCameraDirective } from './neutrinos-file/directives/n-camera.directive';\nimport { NDownloadDirective } from './neutrinos-file/directives/n-download.directive';\nimport { NScanDirective } from './neutrinos-file/directives/n-scanner.directive';\nimport { NVideoDirective } from './neutrinos-file/directives/n-video.directive';\nimport { NBarcodeDirective } from './neutrinos-file/directives/n-barcode.directive';\nimport { NTtsDirective } from './neutrinos-file/directives/n-tts.directive';\nimport { NFingerprintDirective } from './neutrinos-file/directives/n-fingerprint.directive';\nimport { NOcrDirective } from './neutrinos-file/directives/n-ocr.directive';\nimport { NShakeDirective } from './neutrinos-file/directives/n-shake.directive';\nimport { NFileUploadComponent } from './neutrinos-file/fileUpload/n-fileUpload.component';\nimport { NFileIOService } from './neutrinos-file/services/n-fileIO.service';\nimport { NAlertService } from './neutrinos-components/nAlertComponent/n-alert.service';\n\nimport { NAlertComponent } from './neutrinos-components/nAlertComponent/n-alert.component';\nimport { NToggleoptionsComponent } from './neutrinos-components/nToggleoptionsComponent/n-toggleoptions.component';\nimport { NSignatureComponent } from './neutrinos-components/nSignatureComponent/n-signature.component';\n\n\nconst EXPORTS: Type<any>[] = [\n  NCameraDirective,\n  NDownloadDirective,\n  NScanDirective,\n  NVideoDirective,\n  NBarcodeDirective,\n  NTtsDirective,\n  NFingerprintDirective,\n  NOcrDirective,\n  NShakeDirective,\n  NFileUploadComponent,\n  NAlertComponent,\n  NToggleoptionsComponent,\n  NSignatureComponent,\n];\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatButtonToggleModule,\n    NeutrinosSeedServicesModule,\n    FlexLayoutModule,\n  ],\n  declarations: [\n    EXPORTS,\n  ],\n  exports: [\n    EXPORTS,\n    NFileUploadComponent,\n    NeutrinosSeedServicesModule,\n  ],\n  providers: [\n    NFileIOService,\n    NAlertService\n  ]\n})\nexport class NeutrinosModule {\n\n\n}\n"]}