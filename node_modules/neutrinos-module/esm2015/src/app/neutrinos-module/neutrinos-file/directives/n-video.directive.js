import { Directive, Input, Output, EventEmitter } from '@angular/core';
import { HostListener } from '@angular/core';
import { NFileIOService } from '../services/n-fileIO.service';
export class NVideoDirective {
    constructor(fsv) {
        this.fsv = fsv;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    methodToHandleMouseClickAction() {
        this.getVideo()
            .then(sucess => this.onsuccess.emit(sucess))
            .catch(error => this.onerror.emit(error));
    }
    getVideo() {
        return new Promise((resolve, reject) => {
            this.fsv.getVideo(this.videoOptions).then(res => {
                const options = {
                    'formData': res,
                    'entityName': this.videoOptions.entityName,
                    'metadata': this.videoOptions.metadata
                };
                this.fsv.upload(options)
                    .then(uri => resolve(uri))
                    .catch(err => reject(err));
            }).catch(err => reject(err));
        });
    }
}
NVideoDirective.decorators = [
    { type: Directive, args: [{
                selector: '[n-video]'
            },] }
];
NVideoDirective.ctorParameters = () => [
    { type: NFileIOService }
];
NVideoDirective.propDecorators = {
    videoOptions: [{ type: Input }],
    onsuccess: [{ type: Output }],
    onerror: [{ type: Output }],
    methodToHandleMouseClickAction: [{ type: HostListener, args: ['click',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi12aWRlby5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvYXBwL25ldXRyaW5vcy1tb2R1bGUvbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLXZpZGVvLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBUzlELE1BQU0sT0FBTyxlQUFlO0lBSzFCLFlBQW9CLEdBQW1CO1FBQW5CLFFBQUcsR0FBSCxHQUFHLENBQWdCO1FBSDdCLGNBQVMsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNsRCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFFZixDQUFDO0lBRXJCLDhCQUE4QjtRQUNuRCxJQUFJLENBQUMsUUFBUSxFQUFFO2FBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDM0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDOUMsTUFBTSxPQUFPLEdBQUc7b0JBQ2QsVUFBVSxFQUFFLEdBQUc7b0JBQ2YsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVTtvQkFDMUMsVUFBVSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUTtpQkFDdkMsQ0FBQztnQkFDRixJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7cUJBQ3JCLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztxQkFDekIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDL0IsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUE3QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxXQUFXO2FBQ3RCOzs7WUFSUSxjQUFjOzs7MkJBVXBCLEtBQUs7d0JBQ0wsTUFBTTtzQkFDTixNQUFNOzZDQUlOLFlBQVksU0FBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkZpbGVJT1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9uLWZpbGVJTy5zZXJ2aWNlJztcbmltcG9ydCB7IE5EaXJlY3RpdmVPcHRpb25zIH0gZnJvbSAnLi9kaXJlY3RpdmUuY2xhc3MnO1xuXG5cbmRlY2xhcmUgY29uc3QgbmF2aWdhdG9yOiBhbnk7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuLXZpZGVvXSdcbn0pXG5leHBvcnQgY2xhc3MgTlZpZGVvRGlyZWN0aXZlIHtcbiAgQElucHV0KCkgdmlkZW9PcHRpb25zOiBORGlyZWN0aXZlT3B0aW9ucztcbiAgQE91dHB1dCgpIG9uc3VjY2VzczogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBvbmVycm9yOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZzdjogTkZpbGVJT1NlcnZpY2UpIHsgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJykgbWV0aG9kVG9IYW5kbGVNb3VzZUNsaWNrQWN0aW9uKCkge1xuICAgIHRoaXMuZ2V0VmlkZW8oKVxuICAgICAgLnRoZW4oc3VjZXNzID0+IHRoaXMub25zdWNjZXNzLmVtaXQoc3VjZXNzKSlcbiAgICAgIC5jYXRjaChlcnJvciA9PiB0aGlzLm9uZXJyb3IuZW1pdChlcnJvcikpO1xuICB9XG5cbiAgZ2V0VmlkZW8oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5mc3YuZ2V0VmlkZW8odGhpcy52aWRlb09wdGlvbnMpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgICAnZm9ybURhdGEnOiByZXMsXG4gICAgICAgICAgJ2VudGl0eU5hbWUnOiB0aGlzLnZpZGVvT3B0aW9ucy5lbnRpdHlOYW1lLFxuICAgICAgICAgICdtZXRhZGF0YSc6IHRoaXMudmlkZW9PcHRpb25zLm1ldGFkYXRhXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZnN2LnVwbG9hZChvcHRpb25zKVxuICAgICAgICAgIC50aGVuKHVyaSA9PiByZXNvbHZlKHVyaSkpXG4gICAgICAgICAgLmNhdGNoKGVyciA9PiByZWplY3QoZXJyKSk7XG4gICAgICB9KS5jYXRjaChlcnIgPT4gcmVqZWN0KGVycikpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=