import { Directive, Input, Output, EventEmitter, HostListener } from '@angular/core';
import { NFileIOService } from '../services/n-fileIO.service';
export class NDownloadDirective {
    constructor(fsv) {
        this.fsv = fsv;
        this.onsuccess = new EventEmitter();
        this.onerror = new EventEmitter();
    }
    methodToHandleMouseClickAction() {
        this.downloadFile()
            .then(res => this.onsuccess.emit(res))
            .catch(err => this.onerror.emit(err));
    }
    downloadFile() {
        return this.fsv.download(this.downloadOptions);
    }
}
NDownloadDirective.decorators = [
    { type: Directive, args: [{ selector: '[n-download]' },] }
];
NDownloadDirective.ctorParameters = () => [
    { type: NFileIOService }
];
NDownloadDirective.propDecorators = {
    downloadOptions: [{ type: Input }],
    onsuccess: [{ type: Output }],
    onerror: [{ type: Output }],
    methodToHandleMouseClickAction: [{ type: HostListener, args: ['click',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibi1kb3dubG9hZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvYXBwL25ldXRyaW5vcy1tb2R1bGUvbmV1dHJpbm9zLWZpbGUvZGlyZWN0aXZlcy9uLWRvd25sb2FkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFLOUQsTUFBTSxPQUFPLGtCQUFrQjtJQUs3QixZQUFvQixHQUFtQjtRQUFuQixRQUFHLEdBQUgsR0FBRyxDQUFnQjtRQUg3QixjQUFTLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbEQsWUFBTyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWYsQ0FBQztJQUVyQiw4QkFBOEI7UUFDbkQsSUFBSSxDQUFDLFlBQVksRUFBRTthQUNoQixJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNyQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBaEJGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUU7OztZQUo5QixjQUFjOzs7OEJBTXBCLEtBQUs7d0JBQ0wsTUFBTTtzQkFDTixNQUFNOzZDQUlOLFlBQVksU0FBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkZpbGVJT1NlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9uLWZpbGVJTy5zZXJ2aWNlJztcbmltcG9ydCB7IE5EaXJlY3RpdmVPcHRpb25zIH0gZnJvbSAnLi9kaXJlY3RpdmUuY2xhc3MnO1xuXG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tuLWRvd25sb2FkXScgfSlcbmV4cG9ydCBjbGFzcyBORG93bmxvYWREaXJlY3RpdmUge1xuICBASW5wdXQoKSBkb3dubG9hZE9wdGlvbnM6IE5EaXJlY3RpdmVPcHRpb25zO1xuICBAT3V0cHV0KCkgb25zdWNjZXNzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIG9uZXJyb3I6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZnN2OiBORmlsZUlPU2VydmljZSkgeyB9XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snKSBtZXRob2RUb0hhbmRsZU1vdXNlQ2xpY2tBY3Rpb24oKSB7XG4gICAgdGhpcy5kb3dubG9hZEZpbGUoKVxuICAgICAgLnRoZW4ocmVzID0+IHRoaXMub25zdWNjZXNzLmVtaXQocmVzKSlcbiAgICAgIC5jYXRjaChlcnIgPT4gdGhpcy5vbmVycm9yLmVtaXQoZXJyKSk7XG4gIH1cblxuICBkb3dubG9hZEZpbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZnN2LmRvd25sb2FkKHRoaXMuZG93bmxvYWRPcHRpb25zKTtcbiAgfVxufVxuIl19