{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator, __assign, __spreadArrays } from 'tslib';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\nvar FirebaseStorageError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseStorageError, _super);\n\n  function FirebaseStorageError(code, message) {\n    var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\n\n    _this.customData = {\n      serverResponse: null\n    }; // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n\n    Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\n    return _this;\n  }\n\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.code;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function () {\n      if (this.customData.serverResponse) {\n        return this.message + \"\\n\" + this.customData.serverResponse;\n      } else {\n        return this.message;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function () {\n      return this.customData.serverResponse;\n    },\n    set: function (serverResponse) {\n      this.customData.serverResponse = serverResponse;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}(FirebaseError);\n\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error',\n  UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'\n};\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, message);\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (headers !== undefined) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isNonArrayObject(p) {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\n  }\n\n  if (value > maxValue) {\n    throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(Code.UNSUPPORTED_ENVIRONMENT, \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n\n  return Observer;\n}();\n\nvar UploadTaskSnapshot =\n/** @class */\nfunction () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  return UploadTaskSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  function UploadTask(ref, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    /**\r\n     * @internal\r\n     */\n\n\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n\n    this._errorHandler = function (error) {\n      _this._request = undefined;\n      _this._chunkMultiplier = 1;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this._needToFetchStatus = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(InternalTaskState.ERROR);\n      }\n    };\n\n    this._metadataErrorHandler = function (error) {\n      _this._request = undefined;\n\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(InternalTaskState.ERROR);\n      }\n    };\n\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n\n      _this._start();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this._promise.then(null, function () {});\n  }\n\n  UploadTask.prototype._makeProgressCallback = function () {\n    var _this = this;\n\n    var sizeBefore = this._transferred;\n    return function (loaded) {\n      return _this._updateProgress(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype._shouldDoResumable = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype._start = function () {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this._request !== undefined) {\n      return;\n    }\n\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  };\n\n  UploadTask.prototype._resolveToken = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this._ref.storage.getAuthToken().then(function (authToken) {\n      switch (_this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n\n        case InternalTaskState.CANCELING:\n          _this._transition(InternalTaskState.CANCELED);\n\n          break;\n\n        case InternalTaskState.PAUSING:\n          _this._transition(InternalTaskState.PAUSED);\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype._createResumable = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var createRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this._request = undefined;\n        _this._uploadUrl = url;\n        _this._needToFetchStatus = false;\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._fetchStatus = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\n\n      var statusRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this._request = undefined;\n\n        _this._updateProgress(status.current);\n\n        _this._needToFetchStatus = false;\n\n        if (status.finalized) {\n          _this._needToFetchMetadata = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._continueUpload = function () {\n    var _this = this;\n\n    var chunkSize = resumableUploadChunkSize * this._chunkMultiplier;\n    var status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\n      } catch (e) {\n        _this._error = e;\n\n        _this._transition(InternalTaskState.ERROR);\n\n        return;\n      }\n\n      var uploadRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this._increaseMultiplier();\n\n        _this._request = undefined;\n\n        _this._updateProgress(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this._metadata = newStatus.metadata;\n\n          _this._transition(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._increaseMultiplier = function () {\n    var currentSize = resumableUploadChunkSize * this._chunkMultiplier; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  };\n\n  UploadTask.prototype._fetchMetadata = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\n\n      var metadataRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._transition(InternalTaskState.SUCCESS);\n      }, _this._metadataErrorHandler);\n    });\n  };\n\n  UploadTask.prototype._oneShotUpload = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var multipartRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\n\n      _this._request = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._updateProgress(_this._blob.size());\n\n        _this._transition(InternalTaskState.SUCCESS);\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._updateProgress = function (transferred) {\n    var old = this._transferred;\n    this._transferred = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  };\n\n  UploadTask.prototype._transition = function (state) {\n    if (this._state === state) {\n      return;\n    }\n\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n\n        if (wasPaused) {\n          this._notifyObservers();\n\n          this._start();\n        }\n\n        break;\n\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n\n        break;\n\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n\n        break;\n\n      case InternalTaskState.RUNNING:\n        this._start();\n\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this._state);\n      return new UploadTaskSnapshot(this._transferred, this._blob.size(), externalState, this._metadata, this, this._ref);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type - The type of event to listen for.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var observer = new Observer(nextOrObserver, error, completed);\n\n    this._addObserver(observer);\n\n    return function () {\n      _this._removeObserver(observer);\n    };\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected - The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype._addObserver = function (observer) {\n    this._observers.push(observer);\n\n    this._notifyObserver(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype._removeObserver = function (observer) {\n    var i = this._observers.indexOf(observer);\n\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype._notifyObservers = function () {\n    var _this = this;\n\n    this._finishPromise();\n\n    var observers = this._observers.slice();\n\n    observers.forEach(function (observer) {\n      _this._notifyObserver(observer);\n    });\n  };\n\n  UploadTask.prototype._finishPromise = function () {\n    if (this._resolve !== undefined) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          async(this._resolve.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this._reject;\n          async(toCall.bind(null, this._error))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  };\n\n  UploadTask.prototype._notifyObserver = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this._state);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    var valid = this._state === InternalTaskState.PAUSED || this._state === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    var valid = this._state === InternalTaskState.RUNNING;\n\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    var valid = this._state === InternalTaskState.RUNNING || this._state === InternalTaskState.PAUSING;\n\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(_service, location) {\n    this._service = _service;\n\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @returns The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  };\n\n  Reference.prototype.newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @returns An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this._location.bucket, '');\n      return this.newRef(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function () {\n      return this._location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function () {\n      return this._location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function () {\n      return lastComponent(this._location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function () {\n      return this._service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function () {\n      var newPath = parent(this._location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this._location.bucket, newPath);\n      return new Reference(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Reference.prototype._throwIfRoot = function (name) {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * Uploads a blob to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\n\n\nfunction uploadBytesResumable(ref, data, metadata) {\n  if (metadata === void 0) {\n    metadata = null;\n  }\n\n  ref._throwIfRoot('uploadBytesResumable');\n\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * Uploads a string to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded object.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\n\n\nfunction uploadString(ref, value, format, metadata) {\n  if (format === void 0) {\n    format = StringFormat.RAW;\n  }\n\n  ref._throwIfRoot('putString');\n\n  var data = dataFromString(format, value);\n\n  var metadataClone = __assign({}, metadata);\n\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType;\n  }\n\n  return new UploadTask(ref, new FbsBlob(data.data, true), metadataClone);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - Storage Reference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll(ref) {\n  var accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(function () {\n    return accumulator;\n  });\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @internal\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\n\n\nfunction listAllHelper(ref, accumulator, pageToken) {\n  return __awaiter(this, void 0, void 0, function () {\n    var opt, nextPage;\n\n    var _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          opt = {\n            // maxResults is 1000 by default.\n            pageToken: pageToken\n          };\n          return [4\n          /*yield*/\n          , list$1(ref, opt)];\n\n        case 1:\n          nextPage = _c.sent();\n\n          (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n          (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n          if (!(nextPage.nextPageToken != null)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , listAllHelper(ref, accumulator, nextPage.nextPageToken)];\n\n        case 2:\n          _c.sent();\n\n          _c.label = 3;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - Storage Reference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list$1(ref, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, op, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (options != null) {\n            if (typeof options.maxResults === 'number') {\n              validateNumber('options.maxResults',\n              /* minValue= */\n              1,\n              /* maxValue= */\n              1000, options.maxResults);\n            }\n          }\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          op = options || {};\n          requestInfo = list(ref.storage, ref._location,\n          /*delimiter= */\n          '/', op.pageToken, op.maxResults);\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - Storage Reference to get metadata from.\r\n */\n\n\nfunction getMetadata$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getMetadata');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = getMetadata(ref.storage, ref._location, getMappings());\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - Storage Reference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\n\n\nfunction updateMetadata$1(ref, metadata) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('updateMetadata');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getDownloadURL');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n            if (url === null) {\n              throw noDownloadURL();\n            }\n\n            return url;\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - Storage Reference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('deleteObject');\n\n          return [4\n          /*yield*/\n          , ref.storage.getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = deleteObject(ref.storage, ref._location);\n          return [2\n          /*return*/\n          , ref.storage.makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n * @internal\r\n *\r\n * @param ref - Storage Reference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n */\n\n\nfunction getChild(ref, childPath) {\n  var newPath = child(ref._location.path, childPath);\n  var location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskSnapshotCompat =\n/** @class */\nfunction () {\n  function UploadTaskSnapshotCompat(_delegate, task, ref) {\n    this._delegate = _delegate;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\n    get: function () {\n      return this._delegate.bytesTransferred;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\n    get: function () {\n      return this._delegate.metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\n    get: function () {\n      return this._delegate.state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\n    get: function () {\n      return this._delegate.totalBytes;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return UploadTaskSnapshotCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskCompat =\n/** @class */\nfunction () {\n  function UploadTaskCompat(_delegate, _ref) {\n    this._delegate = _delegate;\n    this._ref = _ref;\n    this.cancel = this._delegate.cancel.bind(this._delegate);\n    this.catch = this._delegate.catch.bind(this._delegate);\n    this.pause = this._delegate.pause.bind(this._delegate);\n    this.resume = this._delegate.resume.bind(this._delegate);\n    this._snapshot = new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\n  }\n\n  Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\n    get: function () {\n      return this._snapshot;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\n    var _this = this;\n\n    return this._delegate.then(function (snapshot) {\n      if (onFulfilled) {\n        return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\n      }\n    }, onRejected);\n  };\n\n  UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var wrappedNextOrObserver = undefined;\n\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = function (taskSnapshot) {\n          return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n        };\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next ? function (taskSnapshot) {\n            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n          } : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n\n    return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\n  };\n\n  return UploadTaskCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListResultCompat =\n/** @class */\nfunction () {\n  function ListResultCompat(_delegate, _service) {\n    this._delegate = _delegate;\n    this._service = _service;\n  }\n\n  Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\n    get: function () {\n      var _this = this;\n\n      return this._delegate.prefixes.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"items\", {\n    get: function () {\n      var _this = this;\n\n      return this._delegate.items.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\n    get: function () {\n      return this._delegate.nextPageToken || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ListResultCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ReferenceCompat =\n/** @class */\nfunction () {\n  function ReferenceCompat(_delegate, storage) {\n    this._delegate = _delegate;\n    this.storage = storage;\n  }\n\n  Object.defineProperty(ReferenceCompat.prototype, \"name\", {\n    get: function () {\n      return this._delegate.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\n    get: function () {\n      return this._delegate.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\n    get: function () {\n      return this._delegate.fullPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ReferenceCompat.prototype.toString = function () {\n    return this._delegate.toString();\n  };\n  /**\r\n   * @returns A reference to the object obtained by\r\n   * appending childPath, removing any duplicate, beginning, or trailing\r\n   * slashes.\r\n   */\n\n\n  ReferenceCompat.prototype.child = function (childPath) {\n    var reference = getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  };\n\n  Object.defineProperty(ReferenceCompat.prototype, \"root\", {\n    get: function () {\n      return new ReferenceCompat(this._delegate.root, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\n    /**\r\n     * @returns A reference to the parent of the\r\n     * current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var reference = this._delegate.parent;\n\n      if (reference == null) {\n        return null;\n      }\n\n      return new ReferenceCompat(reference, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data - The blob to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n  ReferenceCompat.prototype.put = function (data, metadata) {\n    this._throwIfRoot('put');\n\n    return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value - The string to upload.\r\n   * @param format - The format of the string to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n\n  ReferenceCompat.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    this._throwIfRoot('putString');\n\n    return new UploadTaskCompat(uploadString(this._delegate, value, format, metadata), this);\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @returns A Promise that resolves with all the items and prefixes under\r\n   *  the current storage reference. `prefixes` contains references to\r\n   *  sub-directories and `items` contains references to objects in this\r\n   *  folder. `nextPageToken` is never returned.\r\n   */\n\n\n  ReferenceCompat.prototype.listAll = function () {\n    var _this = this;\n\n    return listAll(this._delegate).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options - See ListOptions for details.\r\n   * @returns A Promise that resolves with the items and prefixes.\r\n   * `prefixes` contains references to sub-folders and `items`\r\n   * contains references to objects in this folder. `nextPageToken`\r\n   * can be used to get the rest of the results.\r\n   */\n\n\n  ReferenceCompat.prototype.list = function (options) {\n    var _this = this;\n\n    return list$1(this._delegate, options).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * A promise that resolves with the metadata for this object. If this\r\n   * object doesn't exist or metadata cannot be retreived, the promise is\r\n   * rejected.\r\n   */\n\n\n  ReferenceCompat.prototype.getMetadata = function () {\n    return getMetadata$1(this._delegate);\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata - The new metadata for the object.\r\n   * Only values that have been explicitly set will be changed. Explicitly\r\n   * setting a value to null will remove the metadata.\r\n   * @returns A promise that resolves\r\n   * with the new metadata for this object.\r\n   * @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  ReferenceCompat.prototype.updateMetadata = function (metadata) {\n    return updateMetadata$1(this._delegate, metadata);\n  };\n  /**\r\n   * @returns A promise that resolves with the download\r\n   * URL for this object.\r\n   */\n\n\n  ReferenceCompat.prototype.getDownloadURL = function () {\n    return getDownloadURL(this._delegate);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @returns A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  ReferenceCompat.prototype.delete = function () {\n    this._throwIfRoot('delete');\n\n    return deleteObject$1(this._delegate);\n  };\n\n  ReferenceCompat.prototype._throwIfRoot = function (name) {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return ReferenceCompat;\n}();\n/**\r\n * A request whose promise always fails.\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false;\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough - True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.serverResponse = xhr.getResponseText();\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\n\n\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\n\n\nfunction refFromPath(ref, path) {\n  if (ref instanceof StorageService) {\n    var service = ref;\n\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n\n    var reference = new Reference(service, service._bucket);\n\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      if (path.includes('..')) {\n        throw invalidArgument('`path` param cannot contain \"..\"');\n      }\n\n      return getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\nfunction ref(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof StorageService) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(config) {\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n  if (bucketString == null) {\n    return null;\n  }\n\n  return Location.makeFromBucketSpec(bucketString);\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageService =\n/** @class */\nfunction () {\n  function StorageService(app,\n  /**\r\n   * @internal\r\n   */\n  _authProvider,\n  /**\r\n   * @internal\r\n   */\n  _pool,\n  /**\r\n   * @internal\r\n   */\n  _url) {\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._pool = _pool;\n    this._url = _url;\n    /**\r\n     * @internal\r\n     */\n\n    this._bucket = null;\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url);\n    } else {\n      this._bucket = extractBucket(this.app.options);\n    }\n  }\n\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this._maxUploadRetryTime;\n    },\n    set: function (time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxUploadRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this._maxOperationRetryTime;\n    },\n    set: function (time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxOperationRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this._authProvider.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   * @internal\r\n   */\n\n\n  StorageService.prototype._delete = function () {\n    this._deleted = true;\n\n    this._requests.forEach(function (request) {\n      return request.cancel();\n    });\n\n    this._requests.clear();\n\n    return Promise.resolve();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   */\n\n\n  StorageService.prototype.makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  /**\r\n   * @internal\r\n   * @param requestInfo - HTTP RequestInfo object\r\n   * @param authToken - Firebase auth token\r\n   */\n\n\n  StorageService.prototype.makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n\n    if (!this._deleted) {\n      var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool);\n\n      this._requests.add(request_1); // Request removes itself from set when complete.\n\n\n      request_1.getPromise().then(function () {\n        return _this._requests.delete(request_1);\n      }, function () {\n        return _this._requests.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n\n  return StorageService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageServiceCompat =\n/** @class */\nfunction () {\n  function StorageServiceCompat(app, _delegate) {\n    var _this = this;\n\n    this.app = app;\n    this._delegate = _delegate;\n    this.INTERNAL = {\n      /**\r\n       * Called when the associated app is deleted.\r\n       */\n      delete: function () {\n        return _this._delegate._delete();\n      }\n    };\n  }\n\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this._delegate.maxOperationRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this._delegate.maxUploadRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n  StorageServiceCompat.prototype.ref = function (path) {\n    if (isUrl(path)) {\n      throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageServiceCompat.prototype.refFromURL = function (url) {\n    if (!isUrl(url)) {\n      throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\n    }\n\n    try {\n      Location.makeFromUrl(url);\n    } catch (e) {\n      throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  };\n\n  StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\n    this._delegate.maxUploadRetryTime = time;\n  };\n\n  StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\n    this._delegate.maxOperationRetryTime = time;\n  };\n\n  return StorageServiceCompat;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.4.2\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, url) {\n  // Dependencies\n  // TODO: This should eventually be 'app-compat'\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal'); // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n\n  var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url));\n  return storageServiceCompat;\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"sources":["C:/Users/kanyi/Desktop/WOC/assignment-06-26/app/node_modules/@firebase/storage/dist/index.esm.js"],"names":["firebase","__extends","__awaiter","__generator","__assign","__spreadArrays","FirebaseError","Component","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","FirebaseStorageError","_super","code","message","_this","call","prependCode","customData","serverResponse","Object","setPrototypeOf","prototype","codeEquals","defineProperty","get","enumerable","configurable","set","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","UNSUPPORTED_ENVIRONMENT","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","value","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","end","longEnough","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","ErrorCode","NetworkXhrIo","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","method","body","headers","open","undefined","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","isJustDef","p","isFunction","isNonArrayObject","Array","isArray","isString","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","args","_i","arguments","bb","append","sliceBlob","blob","start","webkitSlice","mozSlice","slice","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","jsonObjectOrNull","obj","JSON","parse","parent","index","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","Number","sizeMapping","addRef","service","generateRef","makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromResponseString","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","getDownloadUrl","updateMetadata","deleteObject","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","assign","multipartUpload","genBoundary","str","Math","random","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","resumableUploadChunkSize","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","asFunctions","next","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","async","f","argsToForward","then","UploadTask","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","reject","_start","_makeProgressCallback","sizeBefore","loaded","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","callback","storage","getAuthToken","authToken","_location","createRequest","makeRequest","getPromise","statusRequest","uploadRequest","newStatus","_increaseMultiplier","currentSize","metadataRequest","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","_service","newRef","_throwIfRoot","uploadBytesResumable","uploadString","listAll","accumulator","listAllHelper","opt","nextPage","label","list$1","sent","options","op","getMetadata$1","updateMetadata$1","getDownloadURL","deleteObject$1","getChild","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","_snapshot","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","root","put","putString","r","delete","FailRequest","promise_","_appDelete","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","mustStop","waitMillis","stopped","stop","wasTimeout","clearTimeout","id","NetworkRequest","errorCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","doTheRequest","backoffCallback","RequestEndStatus","progressListener","progressEvent","lengthComputable","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","addVersionHeader_","SDK_VERSION","addGmpidHeader_","appId","isUrl","test","refFromURL","refFromPath","StorageService","_bucket","includes","serviceOrRef","pathOrUrl","extractBucket","config","app","_authProvider","_pool","_url","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","_delete","request","clear","request_1","add","StorageServiceCompat","INTERNAL","setMaxUploadRetryTime","setMaxOperationRetryTime","STORAGE_TYPE","factory","container","getProvider","authProvider","storageServiceCompat","registerStorage","instance","namespaceExports","Storage","registerComponent","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator, __assign, __spreadArrays } from 'tslib';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\nvar FirebaseStorageError = /** @class */ (function (_super) {\r\n    __extends(FirebaseStorageError, _super);\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        _this.customData = { serverResponse: null };\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            if (this.customData.serverResponse) {\r\n                return this.message + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                return this.message;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(FirebaseError));\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error',\r\n    UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, message);\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new FirebaseStorageError(Code.UNSUPPORTED_ENVIRONMENT, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * @internal\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = InternalTaskState.RUNNING;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this._ref.storage.getAuthToken().then(function (authToken) {\r\n            switch (_this._state) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this._transition(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this._transition(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = resumableUploadChunkSize * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(InternalTaskState.SUCCESS);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(InternalTaskState.SUCCESS);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === InternalTaskState.PAUSED;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case InternalTaskState.PAUSING:\r\n                this._transition(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this._transition(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return new UploadTaskSnapshot(this._transferred, this._blob.size(), externalState, this._metadata, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === InternalTaskState.PAUSED ||\r\n            this._state === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === InternalTaskState.RUNNING ||\r\n            this._state === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @returns The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype.newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @returns An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this.newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            var newPath = parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads a blob to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    if (metadata === void 0) { metadata = null; }\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded object.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    if (format === void 0) { format = StringFormat.RAW; }\r\n    ref._throwIfRoot('putString');\r\n    var data = dataFromString(format, value);\r\n    var metadataClone = __assign({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return new UploadTask(ref, new FbsBlob(data.data, true), metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - Storage Reference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @internal\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - Storage Reference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, op, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    op = options || {};\r\n                    requestInfo = list(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - Storage Reference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getMetadata(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - Storage Reference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage\r\n                            .makeRequest(requestInfo, authToken)\r\n                            .getPromise()\r\n                            .then(function (url) {\r\n                            if (url === null) {\r\n                                throw noDownloadURL();\r\n                            }\r\n                            return url;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - Storage Reference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = deleteObject(ref.storage, ref._location);\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n * @internal\r\n *\r\n * @param ref - Storage Reference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n */\r\nfunction getChild(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n        this._snapshot = new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return this._snapshot;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = getChild(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        return new UploadTaskCompat(uploadString(this._delegate, value, format, metadata), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list$1(this._delegate, options).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A promise that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata$1(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A promise that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata$1(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A promise that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A promise that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject$1(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = xhr.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof StorageService) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            if (path.includes('..')) {\r\n                throw invalidArgument('`path` param cannot contain \"..\"');\r\n            }\r\n            return getChild(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof StorageService) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString);\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageService = /** @class */ (function () {\r\n    function StorageService(app, \r\n    /**\r\n     * @internal\r\n     */\r\n    _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _pool, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._bucket = null;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     * @internal\r\n     */\r\n    StorageService.prototype._delete = function () {\r\n        this._deleted = true;\r\n        this._requests.forEach(function (request) { return request.cancel(); });\r\n        this._requests.clear();\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    StorageService.prototype.makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @internal\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    StorageService.prototype.makeRequest = function (requestInfo, authToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    return StorageService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        var _this = this;\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n        this.INTERNAL = {\r\n            /**\r\n             * Called when the associated app is deleted.\r\n             */\r\n            delete: function () {\r\n                return _this._delegate._delete();\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: StorageService,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n"]},"metadata":{},"sourceType":"module"}